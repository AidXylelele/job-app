[{"/Users/o.g_vlad/vscode/job-app/src/index.tsx":"1","/Users/o.g_vlad/vscode/job-app/src/reportWebVitals.ts":"2","/Users/o.g_vlad/vscode/job-app/src/App.tsx":"3","/Users/o.g_vlad/vscode/job-app/src/requestAPI/requestAPI.ts":"4","/Users/o.g_vlad/vscode/job-app/src/redux/jobSlice.ts":"5","/Users/o.g_vlad/vscode/job-app/src/redux/store.ts":"6","/Users/o.g_vlad/vscode/job-app/src/redux/initSlice.ts":"7","/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx":"8","/Users/o.g_vlad/vscode/job-app/src/Job/Job.tsx":"9","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/AdditionalInfo/AdditionalInfo.tsx":"10","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Body/Body.tsx":"11","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Header/Header.tsx":"12","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Text/Text.tsx":"13","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Title/Titile.tsx":"14","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/JobDetailedContainer.tsx":"15","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/JobDetailedPage.tsx":"16","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx":"17","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Theme.js":"18","/Users/o.g_vlad/vscode/job-app/src/data/locations.ts":"19","/Users/o.g_vlad/vscode/job-app/src/redux/hooks.ts":"20","/Users/o.g_vlad/vscode/job-app/src/utils/utils.ts":"21","/Users/o.g_vlad/vscode/job-app/src/data/svgIcons.ts":"22","/Users/o.g_vlad/vscode/job-app/src/data/additionalStyles.ts":"23","/Users/o.g_vlad/vscode/job-app/src/Preloader/Preloader.tsx":"24"},{"size":478,"mtime":1668679364183,"results":"25","hashOfConfig":"26"},{"size":436,"mtime":1668679815627,"results":"27","hashOfConfig":"26"},{"size":1422,"mtime":1669176664877,"results":"28","hashOfConfig":"26"},{"size":825,"mtime":1669160038969,"results":"29","hashOfConfig":"26"},{"size":2051,"mtime":1669175024645,"results":"30","hashOfConfig":"26"},{"size":541,"mtime":1669189674528,"results":"31","hashOfConfig":"26"},{"size":866,"mtime":1668949816787,"results":"32","hashOfConfig":"26"},{"size":3688,"mtime":1669189932121,"results":"33","hashOfConfig":"26"},{"size":1924,"mtime":1669190006305,"results":"34","hashOfConfig":"26"},{"size":1540,"mtime":1669159874863,"results":"35","hashOfConfig":"26"},{"size":794,"mtime":1669174969045,"results":"36","hashOfConfig":"26"},{"size":972,"mtime":1669159628978,"results":"37","hashOfConfig":"26"},{"size":905,"mtime":1669159812864,"results":"38","hashOfConfig":"26"},{"size":865,"mtime":1669171866436,"results":"39","hashOfConfig":"26"},{"size":1404,"mtime":1669189644660,"results":"40","hashOfConfig":"26"},{"size":3180,"mtime":1669180306591,"results":"41","hashOfConfig":"26"},{"size":1844,"mtime":1669170236519,"results":"42","hashOfConfig":"26"},{"size":1948,"mtime":1668893371911,"results":"43","hashOfConfig":"26"},{"size":915,"mtime":1669158468792,"results":"44","hashOfConfig":"26"},{"size":1655,"mtime":1669040264329,"results":"45","hashOfConfig":"26"},{"size":1934,"mtime":1669179776439,"results":"46","hashOfConfig":"26"},{"size":1539,"mtime":1669172122504,"results":"47","hashOfConfig":"26"},{"size":568,"mtime":1669174635540,"results":"48","hashOfConfig":"26"},{"size":377,"mtime":1669177845657,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19xqpsn",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"59"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/o.g_vlad/vscode/job-app/src/index.tsx",[],[],"/Users/o.g_vlad/vscode/job-app/src/reportWebVitals.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/App.tsx",[],[],[],"/Users/o.g_vlad/vscode/job-app/src/requestAPI/requestAPI.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/redux/jobSlice.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/redux/store.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/redux/initSlice.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx",["126","127","128"],[],"import { SvgIcon } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { additionalStyles } from \"../data/additionalStyles\";\nimport iconPath from \"../data/svgIcons\";\nimport AdditionalInfo from \"../JobDetailed/AdditionalInfo/AdditionalInfo\";\nimport { usePagination } from \"../redux/hooks\";\nimport {\n  JobType,\n  selectCurrnetTags,\n  selectJobsList,\n  setCurrentJob,\n  setTag,\n} from \"../redux/jobSlice\";\nimport { AppDispatch, RootState } from \"../redux/store\";\nimport { Utils } from \"../utils/utils\";\nimport Job from \"./Job\";\nimport styles from \"./Jobs.module.scss\";\n\ninterface JobContainerProps {\n  list: JobType[];\n  tags: string[];\n  onSetCurrentJob: (data: JobType) => void;\n  onSetTag: (tag: string) => void;\n}\n\nconst JobContainer: React.FC<JobContainerProps> = (\n  props: JobContainerProps\n) => {\n  const [list, setList] = useState<JobType[]>([]);\n  const [tags, setTags] = useState<string[]>([]);\n  const sortedList = Utils.sortJobs(list, tags);\n  const {\n    firstContentIndex,\n    lastContentIndex,\n    nextPage,\n    prevPage,\n    setPage,\n    totalPages,\n  } = usePagination({\n    contentPerPage: 4,\n    count: tags ? sortedList.length : list.length,\n  });\n\n  useEffect(() => {\n    setList(props.list);\n    setTags(props.tags);\n  }, [props.list, props.tags]);\n\n  return (\n    <div className={styles.background}>\n      {!tags.length ? (\n        <></>\n      ) : (\n        <AdditionalInfo\n          {...{\n            title: \"Tags\",\n            data: [\n              {\n                heading: \"Selected tags\",\n                elements: tags,\n                style: additionalStyles.tags,\n              },\n            ],\n            onSetTag: props.onSetTag,\n          }}\n        />\n      )}\n      {sortedList.length\n        ? sortedList\n            .slice(firstContentIndex, lastContentIndex)\n            .map((item: JobType, idx) => (\n              <Job\n                data={{ ...item }}\n                onSetCurrentJob={props.onSetCurrentJob}\n                key={idx}\n              />\n            ))\n        : list.map((item: JobType, idx) => (\n            <Job\n              data={{ ...item }}\n              onSetCurrentJob={props.onSetCurrentJob}\n              key={idx}\n            />\n          ))}\n      <div className={styles.pagination_container}>\n        <div className={styles.pagination_data}>\n          <nav aria-label=\"Pagination\">\n            <a href=\"#\" onClick={prevPage} className={styles.leftArrow}>\n              <span className=\"sr-only\">Previous</span>\n              <SvgIcon>\n                <path d={iconPath.leftArrow} />\n              </SvgIcon>\n            </a>\n            {/* @ts-ignore */}\n            {[...Array(totalPages).keys()].map((el) => (\n              <a\n                href=\"#\"\n                onClick={() => setPage(el + 1)}\n                key={el}\n                className={styles.item}\n              >\n                {el + 1}\n              </a>\n            ))}\n            <a href=\"#\" onClick={nextPage} className={styles.rightArrow}>\n              <span className=\"sr-only\">Next</span>\n              <SvgIcon>\n                <path d={iconPath.rightArrow} />\n              </SvgIcon>\n            </a>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStatetoProps = (state: RootState) => ({\n  list: selectJobsList(state),\n  tags: selectCurrnetTags(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSetCurrentJob: (data: JobType) => {\n    dispatch(setCurrentJob(data));\n  },\n  onSetTag: (tag: string) => {\n    dispatch(setTag(tag));\n  },\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobContainer);\n","/Users/o.g_vlad/vscode/job-app/src/Job/Job.tsx",["129"],[],"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/AdditionalInfo/AdditionalInfo.tsx",[],[],"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Body/Body.tsx",[],[],"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Header/Header.tsx",[],[],"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Text/Text.tsx",["130"],[],"import React from \"react\";\nimport styles from \"./Text.module.scss\";\n\ninterface TextProps {\n  text: string[];\n  list: boolean;\n}\n\nconst Text: React.FC<TextProps> = (props: TextProps) => {\n  const { text, list } = props;\n\n  const textWithTitle = (array: Array<string>, listed: boolean) => {\n    const [title, body] = array;\n    const slicedBody = body.split(\".\");\n    if (!listed) {\n      return (\n        <div className={styles.text}>\n          <h1>{title}</h1>\n          <p>{body}</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.text}>\n        <h1>{title}</h1>\n        <ul>\n          {slicedBody.map((item) => {\n            if (item !== \"\") return <li>{item}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.text}>\n      {text.length > 1 ? textWithTitle(text, list) : <p>{text[0]}</p>}\n    </div>\n  );\n};\n\nexport default Text;\n","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Title/Titile.tsx",[],[],"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/JobDetailedContainer.tsx",[],[],"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/JobDetailedPage.tsx",[],[],"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx",["131"],[],"import React from \"react\";\nimport { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport { Theme } from \"./Theme\";\nimport styles from \"./Map.module.scss\";\nimport { LocationType } from \"../../redux/jobSlice\";\n\ninterface MapOptions {\n  panControl: boolean;\n  zoomControl: boolean;\n  mapTypeControl: boolean;\n  scaleControl: boolean;\n  streetViewControl: boolean;\n  rotateControl: boolean;\n  clickableIcons: boolean;\n  fullscreenControl: boolean;\n  keyboardShortcuts: boolean;\n  scrollwheel: boolean;\n  styles: any;\n}\n\nconst defaultOptions: MapOptions = {\n  panControl: true,\n  zoomControl: false,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  clickableIcons: false,\n  fullscreenControl: false,\n  keyboardShortcuts: false,\n  scrollwheel: false,\n  styles: Theme,\n};\n\ninterface MapProps {\n  center: LocationType;\n}\n\nconst containerStyle = {\n  width: \"300px\",\n  height: \"175px\",\n};\n\nconst Map: React.FC<MapProps> = (props: MapProps) => {\n  const { center } = props;\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyAIzLyy4E4BOyVowNMi850bDZK3Bo2dgyE\",\n  });\n  console.log(\"renderMap\");\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(map: any) {\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map: any) {\n    setMap(null);\n  }, []);\n\n  return isLoaded ? (\n    <div className={styles.container}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={12}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n        options={defaultOptions}\n      >\n        <MarkerF onLoad={onLoad} position={center} />\n      </GoogleMap>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default React.memo(Map);\n","/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Theme.js",[],[],"/Users/o.g_vlad/vscode/job-app/src/data/locations.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/redux/hooks.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/utils/utils.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/data/svgIcons.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/data/additionalStyles.ts",[],[],"/Users/o.g_vlad/vscode/job-app/src/Preloader/Preloader.tsx",[],[],{"ruleId":"132","severity":1,"message":"133","line":89,"column":13,"nodeType":"134","endLine":89,"endColumn":73},{"ruleId":"132","severity":1,"message":"133","line":97,"column":15,"nodeType":"134","endLine":102,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":106,"column":13,"nodeType":"134","endLine":106,"endColumn":74},{"ruleId":"135","severity":1,"message":"136","line":20,"column":7,"nodeType":"134","endLine":20,"endColumn":81},{"ruleId":"137","severity":1,"message":"138","line":28,"column":34,"nodeType":"139","messageId":"140","endLine":28,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":51,"column":10,"nodeType":"143","messageId":"144","endLine":51,"endColumn":13},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar"]