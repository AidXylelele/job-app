{"ast":null,"code":"import _regeneratorRuntime from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _asyncIterator from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";import{createSlice}from\"@reduxjs/toolkit\";import getJobsRequest,{getAddressRequest}from\"../requestAPI/requestAPI\";import{locations}from\"../data/locations\";var initialState={list:[],currentJob:null,tags:[]};export var jobsSlice=createSlice({name:\"jobs\",initialState:initialState,reducers:{setJobsList:function setJobsList(state,action){state.list=action.payload;},setCurrentJob:function setCurrentJob(state,action){state.currentJob=action.payload;},setTag:function setTag(state,action){var tag=action.payload;if(state.tags.includes(tag)){state.tags=state.tags.filter(function(item){return item!==tag;});}else{state.tags.push(tag);}}}});var _jobsSlice$actions=jobsSlice.actions,setJobsList=_jobsSlice$actions.setJobsList,setCurrentJob=_jobsSlice$actions.setCurrentJob,setTag=_jobsSlice$actions.setTag;export{setJobsList,setCurrentJob,setTag};export var selectJobsList=function selectJobsList(state){return state.jobs.list;};export var selectCurrentJob=function selectCurrentJob(state){return state.jobs.currentJob;};export var selectCurrnetTags=function selectCurrnetTags(state){return state.jobs.tags;};export var thunkSetJobs=function thunkSetJobs(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var list,_iteratorAbruptCompletion,_didIteratorError,_iteratorError,_iterator,_step,item,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getJobsRequest();case 2:list=_context.sent;list.map(function(item,idx){item.location=locations[idx];return item;});_iteratorAbruptCompletion=false;_didIteratorError=false;_context.prev=6;_iterator=_asyncIterator(list);case 8:_context.next=10;return _iterator.next();case 10:if(!(_iteratorAbruptCompletion=!(_step=_context.sent).done)){_context.next=19;break;}item=_step.value;_context.next=14;return getAddressRequest(item.location);case 14:res=_context.sent;item.address=res;case 16:_iteratorAbruptCompletion=false;_context.next=8;break;case 19:_context.next=25;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](6);_didIteratorError=true;_iteratorError=_context.t0;case 25:_context.prev=25;_context.prev=26;if(!(_iteratorAbruptCompletion&&_iterator.return!=null)){_context.next=30;break;}_context.next=30;return _iterator.return();case 30:_context.prev=30;if(!_didIteratorError){_context.next=33;break;}throw _iteratorError;case 33:return _context.finish(30);case 34:return _context.finish(25);case 35:dispatch(setJobsList(list));case 36:case\"end\":return _context.stop();}}},_callee,null,[[6,21,25,35],[26,,30,34]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export default jobsSlice.reducer;","map":{"version":3,"names":["createSlice","getJobsRequest","getAddressRequest","locations","initialState","list","currentJob","tags","jobsSlice","name","reducers","setJobsList","state","action","payload","setCurrentJob","setTag","tag","includes","filter","item","push","actions","selectJobsList","jobs","selectCurrentJob","selectCurrnetTags","thunkSetJobs","dispatch","map","idx","location","res","address","reducer"],"sources":["/Users/o.g_vlad/vscode/job-app/src/redux/jobSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"./store\";\nimport getJobsRequest, { getAddressRequest } from \"../requestAPI/requestAPI\";\nimport { locations } from \"../data/locations\";\n\nexport type LocationType = {\n  lat: number;\n  lng: number;\n};\n\nexport interface JobType {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  title: string;\n  salary: string;\n  address: string;\n  benefits: string[];\n  location: LocationType;\n  pictures: string[];\n  createdAt: string;\n  updatedAt: string;\n  description: string;\n  employment_type: string[];\n}\n\nexport type JobsState = {\n  list: Array<JobType>;\n  currentJob: JobType | null;\n  tags: Array<string>;\n};\n\nconst initialState: JobsState = {\n  list: [],\n  currentJob: null,\n  tags: [],\n};\n\nexport const jobsSlice = createSlice({\n  name: \"jobs\",\n  initialState,\n  reducers: {\n    setJobsList: (state, action: PayloadAction<Array<JobType>>) => {\n      state.list = action.payload;\n    },\n    setCurrentJob: (state, action: PayloadAction<JobType>) => {\n      state.currentJob = action.payload;\n    },\n    setTag: (state, action: PayloadAction<string>) => {\n      const tag = action.payload;\n      if (state.tags.includes(tag)) {\n        state.tags = state.tags.filter((item) => item !== tag);\n      } else {\n        state.tags.push(tag);\n      }\n    },\n  },\n});\n\nexport const { setJobsList, setCurrentJob, setTag } = jobsSlice.actions;\n\nexport const selectJobsList = (state: RootState) => state.jobs.list;\nexport const selectCurrentJob = (state: RootState) => state.jobs.currentJob;\nexport const selectCurrnetTags = (state: RootState) => state.jobs.tags;\n\nexport const thunkSetJobs = (): AppThunk => async (dispatch) => {\n  const list = await getJobsRequest();\n  list.map((item, idx) => {\n    item.location = locations[idx];\n    return item;\n  });\n\n  for await (let item of list) {\n    const res: string = await getAddressRequest(item.location);\n    item.address = res;\n  }\n\n  dispatch(setJobsList(list));\n};\n\nexport default jobsSlice.reducer;\n"],"mappings":"4WAAA,OAASA,WAAW,KAAuB,kBAAkB,CAE7D,MAAOC,eAAc,EAAIC,iBAAiB,KAAQ,0BAA0B,CAC5E,OAASC,SAAS,KAAQ,mBAAmB,CA8B7C,GAAMC,aAAuB,CAAG,CAC9BC,IAAI,CAAE,EAAE,CACRC,UAAU,CAAE,IAAI,CAChBC,IAAI,CAAE,EACR,CAAC,CAED,MAAO,IAAMC,UAAS,CAAGR,WAAW,CAAC,CACnCS,IAAI,CAAE,MAAM,CACZL,YAAY,CAAZA,YAAY,CACZM,QAAQ,CAAE,CACRC,WAAW,CAAE,qBAACC,KAAK,CAAEC,MAAqC,CAAK,CAC7DD,KAAK,CAACP,IAAI,CAAGQ,MAAM,CAACC,OAAO,CAC7B,CAAC,CACDC,aAAa,CAAE,uBAACH,KAAK,CAAEC,MAA8B,CAAK,CACxDD,KAAK,CAACN,UAAU,CAAGO,MAAM,CAACC,OAAO,CACnC,CAAC,CACDE,MAAM,CAAE,gBAACJ,KAAK,CAAEC,MAA6B,CAAK,CAChD,GAAMI,IAAG,CAAGJ,MAAM,CAACC,OAAO,CAC1B,GAAIF,KAAK,CAACL,IAAI,CAACW,QAAQ,CAACD,GAAG,CAAC,CAAE,CAC5BL,KAAK,CAACL,IAAI,CAAGK,KAAK,CAACL,IAAI,CAACY,MAAM,CAAC,SAACC,IAAI,QAAKA,KAAI,GAAKH,GAAG,GAAC,CACxD,CAAC,IAAM,CACLL,KAAK,CAACL,IAAI,CAACc,IAAI,CAACJ,GAAG,CAAC,CACtB,CACF,CACF,CACF,CAAC,CAAC,CAEK,uBAA+CT,SAAS,CAACc,OAAO,CAAxDX,WAAW,oBAAXA,WAAW,CAAEI,aAAa,oBAAbA,aAAa,CAAEC,MAAM,oBAANA,MAAM,CAAuB,yCAExE,MAAO,IAAMO,eAAc,CAAG,QAAjBA,eAAc,CAAIX,KAAgB,QAAKA,MAAK,CAACY,IAAI,CAACnB,IAAI,GACnE,MAAO,IAAMoB,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIb,KAAgB,QAAKA,MAAK,CAACY,IAAI,CAAClB,UAAU,GAC3E,MAAO,IAAMoB,kBAAiB,CAAG,QAApBA,kBAAiB,CAAId,KAAgB,QAAKA,MAAK,CAACY,IAAI,CAACjB,IAAI,GAEtE,MAAO,IAAMoB,aAAY,CAAG,QAAfA,aAAY,oGAAmB,iBAAOC,QAAQ,uOACtC3B,eAAc,EAAE,QAA7BI,IAAI,eACVA,IAAI,CAACwB,GAAG,CAAC,SAACT,IAAI,CAAEU,GAAG,CAAK,CACtBV,IAAI,CAACW,QAAQ,CAAG5B,SAAS,CAAC2B,GAAG,CAAC,CAC9B,MAAOV,KAAI,CACb,CAAC,CAAC,CAAC,iGAEoBf,IAAI,+IAAZe,IAAI,oCACSlB,kBAAiB,CAACkB,IAAI,CAACW,QAAQ,CAAC,SAApDC,GAAW,eACjBZ,IAAI,CAACa,OAAO,CAAGD,GAAG,CAAC,0hBAGrBJ,QAAQ,CAACjB,WAAW,CAACN,IAAI,CAAC,CAAC,CAAC,uFAC7B,iEAED,cAAeG,UAAS,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}