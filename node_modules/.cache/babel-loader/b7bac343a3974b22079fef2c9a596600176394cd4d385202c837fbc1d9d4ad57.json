{"ast":null,"code":"var _jsxFileName = \"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/JobDetailedContainer.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentJob, setTag } from \"../redux/jobSlice\";\nimport { countDate } from \"../Job/Job\";\nimport JobDetailedPage from \"./JobDetailedPage\";\nimport { Utils } from \"../utils/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetailedContainer = props => {\n  const {\n    currentJob,\n    onSetTag\n  } = props;\n  if (!currentJob) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"pidor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 27\n  }, this);\n  const {\n    title,\n    salary,\n    description,\n    createdAt,\n    updatedAt,\n    benefits,\n    employment_type,\n    pictures,\n    location\n  } = currentJob;\n  const date = countDate(createdAt, updatedAt);\n  const parsedSalary = Utils.parseSalary(salary);\n  const parsedDescription = Utils.parseDescription(description);\n  return /*#__PURE__*/_jsxDEV(JobDetailedPage, {\n    ...currentJob,\n    salary: parsedSalary,\n    date,\n    description: parsedDescription,\n    onSetTag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = JobDetailedContainer;\nconst mapStatetoProps = state => ({\n  currentJob: selectCurrentJob(state)\n});\nconst mapDispatchToProps = dispatch => ({\n  onSetTag: tag => {\n    dispatch(setTag(tag));\n  }\n});\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobDetailedContainer);\nvar _c;\n$RefreshReg$(_c, \"JobDetailedContainer\");","map":{"version":3,"names":["React","connect","selectCurrentJob","setTag","countDate","JobDetailedPage","Utils","JobDetailedContainer","props","currentJob","onSetTag","title","salary","description","createdAt","updatedAt","benefits","employment_type","pictures","location","date","parsedSalary","parseSalary","parsedDescription","parseDescription","mapStatetoProps","state","mapDispatchToProps","dispatch","tag"],"sources":["/Users/o.g_vlad/vscode/job-app/src/JobDetailed/JobDetailedContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { JobType, selectCurrentJob, setTag } from \"../redux/jobSlice\";\nimport { AppDispatch, RootState } from \"../redux/store\";\nimport { countDate } from \"../Job/Job\";\nimport JobDetailedPage from \"./JobDetailedPage\";\nimport { Utils } from \"../utils/utils\";\n\ntype JobDetailedContainerProps = {\n  currentJob: JobType | null;\n  onSetTag: (tag: string) => void;\n};\n\nconst JobDetailedContainer: React.FC<JobDetailedContainerProps> = (\n  props: JobDetailedContainerProps\n) => {\n  const { currentJob, onSetTag } = props;\n\n  if (!currentJob) return <div>pidor</div>;\n\n  const {\n    title,\n    salary,\n    description,\n    createdAt,\n    updatedAt,\n    benefits,\n    employment_type,\n    pictures,\n    location,\n  } = currentJob;\n\n  const date = countDate(createdAt, updatedAt);\n  const parsedSalary = Utils.parseSalary(salary);\n  const parsedDescription = Utils.parseDescription(description);\n\n  return (\n    <JobDetailedPage\n      {...{\n        ...currentJob,\n        salary: parsedSalary,\n        date,\n        description: parsedDescription,\n        onSetTag,\n      }}\n    />\n  );\n};\n\nconst mapStatetoProps = (state: RootState) => ({\n  currentJob: selectCurrentJob(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSetTag: (tag: string) => {\n    dispatch(setTag(tag));\n  },\n});\n\nexport default connect(\n  mapStatetoProps,\n  mapDispatchToProps\n)(JobDetailedContainer);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAAkBC,gBAAgB,EAAEC,MAAM,QAAQ,mBAAmB;AAErE,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AAAC;AAOvC,MAAMC,oBAAyD,GAC7DC,KAAgC,IAC7B;EACH,MAAM;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAAGF,KAAK;EAEtC,IAAI,CAACC,UAAU,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAgB;EAExC,MAAM;IACJE,KAAK;IACLC,MAAM;IACNC,WAAW;IACXC,SAAS;IACTC,SAAS;IACTC,QAAQ;IACRC,eAAe;IACfC,QAAQ;IACRC;EACF,CAAC,GAAGV,UAAU;EAEd,MAAMW,IAAI,GAAGhB,SAAS,CAACU,SAAS,EAAEC,SAAS,CAAC;EAC5C,MAAMM,YAAY,GAAGf,KAAK,CAACgB,WAAW,CAACV,MAAM,CAAC;EAC9C,MAAMW,iBAAiB,GAAGjB,KAAK,CAACkB,gBAAgB,CAACX,WAAW,CAAC;EAE7D,oBACE,QAAC,eAAe;IAEZ,GAAGJ,UAAU;IACbG,MAAM,EAAES,YAAY;IACpBD,IAAI;IACJP,WAAW,EAAEU,iBAAiB;IAC9Bb;EAAQ;IAAA;IAAA;IAAA;EAAA,QAEV;AAEN,CAAC;AAAC,KAlCIH,oBAAyD;AAoC/D,MAAMkB,eAAe,GAAIC,KAAgB,KAAM;EAC7CjB,UAAU,EAAEP,gBAAgB,CAACwB,KAAK;AACpC,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAIC,QAAqB,KAAM;EACrDlB,QAAQ,EAAGmB,GAAW,IAAK;IACzBD,QAAQ,CAACzB,MAAM,CAAC0B,GAAG,CAAC,CAAC;EACvB;AACF,CAAC,CAAC;AAEF,eAAe5B,OAAO,CACpBwB,eAAe,EACfE,kBAAkB,CACnB,CAACpB,oBAAoB,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}