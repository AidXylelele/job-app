{"ast":null,"code":"import _slicedToArray from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{GoogleMap,useJsApiLoader,MarkerF}from\"@react-google-maps/api\";import{Theme}from\"./Theme\";import styles from\"./Map.module.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var defaultOptions={panControl:true,zoomControl:false,mapTypeControl:false,scaleControl:false,streetViewControl:false,rotateControl:false,clickableIcons:false,fullscreenControl:false,keyboardShortcuts:false,scrollwheel:false,styles:Theme};var containerStyle={width:\"300px\",height:\"175px\"};var Map=function Map(props){var center=props.center;var _useJsApiLoader=useJsApiLoader({id:\"google-map-script\",googleMapsApiKey:\"AIzaSyAIzLyy4E4BOyVowNMi850bDZK3Bo2dgyE\"}),isLoaded=_useJsApiLoader.isLoaded;console.log(\"renderMap\");var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),map=_React$useState2[0],setMap=_React$useState2[1];var onLoad=React.useCallback(function callback(map){setMap(map);},[]);var onUnmount=React.useCallback(function callback(map){setMap(null);},[]);return isLoaded?/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsx(GoogleMap,{mapContainerStyle:containerStyle,center:center,zoom:12,onLoad:onLoad,onUnmount:onUnmount,options:defaultOptions,children:/*#__PURE__*/_jsx(MarkerF,{onLoad:onLoad,position:center})})}):/*#__PURE__*/_jsx(_Fragment,{});};export default/*#__PURE__*/React.memo(Map);","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","MarkerF","Theme","styles","defaultOptions","panControl","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","clickableIcons","fullscreenControl","keyboardShortcuts","scrollwheel","containerStyle","width","height","Map","props","center","id","googleMapsApiKey","isLoaded","console","log","useState","map","setMap","onLoad","useCallback","callback","onUnmount","container","memo"],"sources":["/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx"],"sourcesContent":["import React from \"react\";\nimport { GoogleMap, useJsApiLoader, MarkerF } from \"@react-google-maps/api\";\nimport { Theme } from \"./Theme\";\nimport styles from \"./Map.module.scss\";\nimport { LocationType } from \"../../redux/jobSlice\";\n\ninterface MapOptions {\n  panControl: boolean;\n  zoomControl: boolean;\n  mapTypeControl: boolean;\n  scaleControl: boolean;\n  streetViewControl: boolean;\n  rotateControl: boolean;\n  clickableIcons: boolean;\n  fullscreenControl: boolean;\n  keyboardShortcuts: boolean;\n  scrollwheel: boolean;\n  styles: any;\n}\n\nconst defaultOptions: MapOptions = {\n  panControl: true,\n  zoomControl: false,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  clickableIcons: false,\n  fullscreenControl: false,\n  keyboardShortcuts: false,\n  scrollwheel: false,\n  styles: Theme,\n};\n\ninterface MapProps {\n  center: LocationType;\n}\n\nconst containerStyle = {\n  width: \"300px\",\n  height: \"175px\",\n};\n\nconst Map: React.FC<MapProps> = (props: MapProps) => {\n  const { center } = props;\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyAIzLyy4E4BOyVowNMi850bDZK3Bo2dgyE\",\n  });\n  console.log(\"renderMap\");\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(map: any) {\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map: any) {\n    setMap(null);\n  }, []);\n\n  return isLoaded ? (\n    <div className={styles.container}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={12}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n        options={defaultOptions}\n      >\n        <MarkerF onLoad={onLoad} position={center} />\n      </GoogleMap>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default React.memo(Map);\n"],"mappings":"oHAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,cAAc,CAAEC,OAAO,KAAQ,wBAAwB,CAC3E,OAASC,KAAK,KAAQ,SAAS,CAC/B,MAAOC,OAAM,KAAM,mBAAmB,CAAC,gGAiBvC,GAAMC,eAA0B,CAAG,CACjCC,UAAU,CAAE,IAAI,CAChBC,WAAW,CAAE,KAAK,CAClBC,cAAc,CAAE,KAAK,CACrBC,YAAY,CAAE,KAAK,CACnBC,iBAAiB,CAAE,KAAK,CACxBC,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,KAAK,CACrBC,iBAAiB,CAAE,KAAK,CACxBC,iBAAiB,CAAE,KAAK,CACxBC,WAAW,CAAE,KAAK,CAClBX,MAAM,CAAED,KACV,CAAC,CAMD,GAAMa,eAAc,CAAG,CACrBC,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,OACV,CAAC,CAED,GAAMC,IAAuB,CAAG,QAA1BA,IAAuB,CAAIC,KAAe,CAAK,CACnD,GAAQC,OAAM,CAAKD,KAAK,CAAhBC,MAAM,CACd,oBAAqBpB,cAAc,CAAC,CAClCqB,EAAE,CAAE,mBAAmB,CACvBC,gBAAgB,CAAE,yCACpB,CAAC,CAAC,CAHMC,QAAQ,iBAARA,QAAQ,CAIhBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,CACxB,oBAAsB3B,KAAK,CAAC4B,QAAQ,CAAC,IAAI,CAAC,oDAAnCC,GAAG,qBAAEC,MAAM,qBAElB,GAAMC,OAAM,CAAG/B,KAAK,CAACgC,WAAW,CAAC,QAASC,SAAQ,CAACJ,GAAQ,CAAE,CAC3DC,MAAM,CAACD,GAAG,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMK,UAAS,CAAGlC,KAAK,CAACgC,WAAW,CAAC,QAASC,SAAQ,CAACJ,GAAQ,CAAE,CAC9DC,MAAM,CAAC,IAAI,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,MAAOL,SAAQ,cACb,YAAK,SAAS,CAAEpB,MAAM,CAAC8B,SAAU,uBAC/B,KAAC,SAAS,EACR,iBAAiB,CAAElB,cAAe,CAClC,MAAM,CAAEK,MAAO,CACf,IAAI,CAAE,EAAG,CACT,MAAM,CAAES,MAAO,CACf,SAAS,CAAEG,SAAU,CACrB,OAAO,CAAE5B,cAAe,uBAExB,KAAC,OAAO,EAAC,MAAM,CAAEyB,MAAO,CAAC,QAAQ,CAAET,MAAO,EAAG,EACnC,EACR,cAEN,kBACD,CACH,CAAC,CAED,2BAAetB,KAAK,CAACoC,IAAI,CAAChB,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}