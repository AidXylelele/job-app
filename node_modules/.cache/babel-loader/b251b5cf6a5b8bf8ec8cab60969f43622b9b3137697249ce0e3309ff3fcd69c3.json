{"ast":null,"code":"var _jsxFileName = \"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport { Theme } from \"./Theme\";\nimport styles from \"./Map.module.scss\";\nimport { getGeocode } from \"use-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultOptions = {\n  panControl: true,\n  zoomControl: false,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  clickableIcons: false,\n  fullscreenControl: false,\n  keyboardShortcuts: false,\n  scrollwheel: false,\n  styles: Theme\n};\nconst containerStyle = {\n  width: \"400px\",\n  height: \"400px\"\n};\nconst Map = props => {\n  _s();\n  const {\n    center,\n    API_KEY\n  } = props;\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: API_KEY\n  });\n  const adress = getGeocode({\n    location: {\n      lat: center.lat,\n      lng: center.lng\n    }\n  }).then(data => console.log(data[0].formatted_address));\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(() => {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 12,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      options: defaultOptions,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        onLoad: onLoad,\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Map, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","Marker","Theme","styles","getGeocode","defaultOptions","panControl","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","clickableIcons","fullscreenControl","keyboardShortcuts","scrollwheel","containerStyle","width","height","Map","props","center","API_KEY","isLoaded","id","googleMapsApiKey","adress","location","lat","lng","then","data","console","log","formatted_address","map","setMap","useState","onLoad","useCallback","onUnmount","container","memo"],"sources":["/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx"],"sourcesContent":["import React from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport { Theme } from \"./Theme\";\nimport styles from \"./Map.module.scss\";\nimport { LocationType } from \"../../redux/jobSlice\";\nimport { getGeocode } from \"use-places-autocomplete\";\n\nconst defaultOptions = {\n  panControl: true,\n  zoomControl: false,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  clickableIcons: false,\n  fullscreenControl: false,\n  keyboardShortcuts: false,\n  scrollwheel: false,\n  styles: Theme,\n};\n\ninterface MapProps {\n  center: LocationType;\n  API_KEY: string;\n}\n\nconst containerStyle = {\n  width: \"400px\",\n  height: \"400px\",\n};\n\nconst Map: React.FC<MapProps> = (props: MapProps) => {\n  const { center, API_KEY } = props;\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: API_KEY,\n  });\n\n  const adress = getGeocode({\n    location: {\n      lat: center.lat,\n      lng: center.lng,\n    },\n  }).then((data) => console.log(data[0].formatted_address));\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback((map: any): void => {\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback((): void => {\n    setMap(null);\n  }, []);\n\n  return isLoaded ? (\n    <div className={styles.container}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={12}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n        options={defaultOptions}\n      >\n        <Marker onLoad={onLoad} position={center} />\n      </GoogleMap>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default React.memo(Map);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,cAAc,EAAEC,MAAM,QAAQ,wBAAwB;AAC1E,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,UAAU,QAAQ,yBAAyB;AAAC;AAAA;AAErD,MAAMC,cAAc,GAAG;EACrBC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,KAAK;EAClBC,cAAc,EAAE,KAAK;EACrBC,YAAY,EAAE,KAAK;EACnBC,iBAAiB,EAAE,KAAK;EACxBC,aAAa,EAAE,KAAK;EACpBC,cAAc,EAAE,KAAK;EACrBC,iBAAiB,EAAE,KAAK;EACxBC,iBAAiB,EAAE,KAAK;EACxBC,WAAW,EAAE,KAAK;EAClBZ,MAAM,EAAED;AACV,CAAC;AAOD,MAAMc,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,GAAuB,GAAIC,KAAe,IAAK;EAAA;EACnD,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EACjC,MAAM;IAAEG;EAAS,CAAC,GAAGvB,cAAc,CAAC;IAClCwB,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAEH;EACpB,CAAC,CAAC;EAEF,MAAMI,MAAM,GAAGtB,UAAU,CAAC;IACxBuB,QAAQ,EAAE;MACRC,GAAG,EAAEP,MAAM,CAACO,GAAG;MACfC,GAAG,EAAER,MAAM,CAACQ;IACd;EACF,CAAC,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC,CAACG,iBAAiB,CAAC,CAAC;EACzD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGtC,KAAK,CAACuC,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMC,MAAM,GAAGxC,KAAK,CAACyC,WAAW,CAAEJ,GAAQ,IAAW;IACnDC,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAG1C,KAAK,CAACyC,WAAW,CAAC,MAAY;IAC9CH,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOb,QAAQ,gBACb;IAAK,SAAS,EAAEpB,MAAM,CAACsC,SAAU;IAAA,uBAC/B,QAAC,SAAS;MACR,iBAAiB,EAAEzB,cAAe;MAClC,MAAM,EAAEK,MAAO;MACf,IAAI,EAAE,EAAG;MACT,MAAM,EAAEiB,MAAO;MACf,SAAS,EAAEE,SAAU;MACrB,OAAO,EAAEnC,cAAe;MAAA,uBAExB,QAAC,MAAM;QAAC,MAAM,EAAEiC,MAAO;QAAC,QAAQ,EAAEjB;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAClC;IAAA;IAAA;IAAA;EAAA,QACR,gBAEN,qCACD;AACH,CAAC;AAAC,GAvCIF,GAAuB;EAAA,QAENnB,cAAc;AAAA;AAAA,KAF/BmB,GAAuB;AAyC7B,kCAAerB,KAAK,CAAC4C,IAAI,CAACvB,GAAG,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}