{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport const usePagination = _ref => {\n  _s();\n  let {\n    contentPerPage,\n    count\n  } = _ref;\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contentPerPage);\n  const lastContentIndex = page * contentPerPage;\n  const firstContentIndex = lastContentIndex - contentPerPage;\n  const changePage = direction => {\n    setPage(state => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n  const setPageSAFE = num => {\n    if (num > pageCount) {\n      setPage(pageCount);\n    } else if (num < 1) {\n      setPage(1);\n    } else {\n      setPage(num);\n    }\n  };\n  return {\n    totalPages: pageCount,\n    nextPage: () => changePage(true),\n    prevPage: () => changePage(false),\n    setPage: setPageSAFE,\n    firstContentIndex,\n    lastContentIndex,\n    page\n  };\n};\n_s(usePagination, \"/DWZXlUKUNETkaaw7t58aXy53hg=\");\nexport const useAppDispatch = () => {\n  _s2();\n  return useDispatch();\n};\n_s2(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nexport const useAppSelector = useSelector;","map":{"version":3,"names":["useState","useDispatch","useSelector","usePagination","contentPerPage","count","page","setPage","pageCount","Math","ceil","lastContentIndex","firstContentIndex","changePage","direction","state","setPageSAFE","num","totalPages","nextPage","prevPage","useAppDispatch","useAppSelector"],"sources":["/Users/o.g_vlad/vscode/job-app/src/redux/hooks.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\ninterface UsePaginationProps {\n  contentPerPage: number;\n  count: number;\n}\n\ninterface UsePaginationReturn {\n  page: number;\n  totalPages: number;\n  firstContentIndex: number;\n  lastContentIndex: number;\n  nextPage: () => void;\n  prevPage: () => void;\n  setPage: (page: number) => void;\n}\n\ntype UsePagination = (arg0: UsePaginationProps) => UsePaginationReturn;\n\nexport const usePagination: UsePagination = ({ contentPerPage, count }) => {\n  const [page, setPage] = useState(1);\n  const pageCount = Math.ceil(count / contentPerPage);\n  const lastContentIndex = page * contentPerPage;\n  const firstContentIndex = lastContentIndex - contentPerPage;\n  const changePage = (direction: boolean) => {\n    setPage((state) => {\n      if (direction) {\n        if (state === pageCount) {\n          return state;\n        }\n        return state + 1;\n      } else {\n        if (state === 1) {\n          return state;\n        }\n        return state - 1;\n      }\n    });\n  };\n  const setPageSAFE = (num: number) => {\n    if (num > pageCount) {\n      setPage(pageCount);\n    } else if (num < 1) {\n      setPage(1);\n    } else {\n      setPage(num);\n    }\n  };\n  return {\n    totalPages: pageCount,\n    nextPage: () => changePage(true),\n    prevPage: () => changePage(false),\n    setPage: setPageSAFE,\n    firstContentIndex,\n    lastContentIndex,\n    page,\n  };\n};\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAA+BC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAoB5E,OAAO,MAAMC,aAA4B,GAAG,QAA+B;EAAA;EAAA,IAA9B;IAAEC,cAAc;IAAEC;EAAM,CAAC;EACpE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMQ,SAAS,GAAGC,IAAI,CAACC,IAAI,CAACL,KAAK,GAAGD,cAAc,CAAC;EACnD,MAAMO,gBAAgB,GAAGL,IAAI,GAAGF,cAAc;EAC9C,MAAMQ,iBAAiB,GAAGD,gBAAgB,GAAGP,cAAc;EAC3D,MAAMS,UAAU,GAAIC,SAAkB,IAAK;IACzCP,OAAO,CAAEQ,KAAK,IAAK;MACjB,IAAID,SAAS,EAAE;QACb,IAAIC,KAAK,KAAKP,SAAS,EAAE;UACvB,OAAOO,KAAK;QACd;QACA,OAAOA,KAAK,GAAG,CAAC;MAClB,CAAC,MAAM;QACL,IAAIA,KAAK,KAAK,CAAC,EAAE;UACf,OAAOA,KAAK;QACd;QACA,OAAOA,KAAK,GAAG,CAAC;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,WAAW,GAAIC,GAAW,IAAK;IACnC,IAAIA,GAAG,GAAGT,SAAS,EAAE;MACnBD,OAAO,CAACC,SAAS,CAAC;IACpB,CAAC,MAAM,IAAIS,GAAG,GAAG,CAAC,EAAE;MAClBV,OAAO,CAAC,CAAC,CAAC;IACZ,CAAC,MAAM;MACLA,OAAO,CAACU,GAAG,CAAC;IACd;EACF,CAAC;EACD,OAAO;IACLC,UAAU,EAAEV,SAAS;IACrBW,QAAQ,EAAE,MAAMN,UAAU,CAAC,IAAI,CAAC;IAChCO,QAAQ,EAAE,MAAMP,UAAU,CAAC,KAAK,CAAC;IACjCN,OAAO,EAAES,WAAW;IACpBJ,iBAAiB;IACjBD,gBAAgB;IAChBL;EACF,CAAC;AACH,CAAC;AAAC,GAtCWH,aAA4B;AAwCzC,OAAO,MAAMkB,cAAc,GAAG;EAAA;EAAA,OAAMpB,WAAW,EAAe;AAAA;AAAC,IAAlDoB,cAAc;EAAA,QAASpB,WAAW;AAAA;AAC/C,OAAO,MAAMqB,cAA+C,GAAGpB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}