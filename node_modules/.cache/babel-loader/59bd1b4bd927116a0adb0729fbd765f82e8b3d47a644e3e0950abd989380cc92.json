{"ast":null,"code":"var _jsxFileName = \"/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx\",\n  _s = $RefreshSig$();\nimport { SvgIcon } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { additionalStyles } from \"../data/additionalStyles\";\nimport iconPath from \"../data/svgIcons\";\nimport AdditionalInfo from \"../JobDetailed/AdditionalInfo/AdditionalInfo\";\nimport { usePagination } from \"../redux/hooks\";\nimport { selectCurrnetTags, selectJobsList, setCurrentJob, setTag } from \"../redux/jobSlice\";\nimport { Utils } from \"../utils/utils\";\nimport Job from \"./Job\";\nimport styles from \"./Jobs.module.scss\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobContainer = props => {\n  _s();\n  const [list, setList] = useState([]);\n  const [tags, setTags] = useState([]);\n  const sortedList = Utils.sortJobs(list, tags);\n  const {\n    firstContentIndex,\n    lastContentIndex,\n    nextPage,\n    prevPage,\n    page,\n    setPage,\n    totalPages\n  } = usePagination({\n    contentPerPage: 4,\n    count: tags ? sortedList.length : list.length\n  });\n  useEffect(() => {\n    setList(props.list);\n    setTags(props.tags);\n  }, [props.list, props.tags]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.background,\n    children: [!tags.length ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(AdditionalInfo, {\n      title: \"Tags\",\n      data: [{\n        heading: \"Selected tags\",\n        elements: tags,\n        style: additionalStyles.tags\n      }],\n      onSetTag: props.onSetTag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), sortedList.length ? sortedList.slice(firstContentIndex, lastContentIndex).map((item, idx) => /*#__PURE__*/_jsxDEV(Job, {\n      data: {\n        ...item\n      },\n      onSetCurrentJob: props.onSetCurrentJob\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }, this)) : list.map((item, idx) => /*#__PURE__*/_jsxDEV(Job, {\n      data: {\n        ...item\n      },\n      onSetCurrentJob: props.onSetCurrentJob\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagination_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pagination_data,\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"Pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: prevPage,\n            className: styles.leftArrow,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SvgIcon, {\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: iconPath.leftArrow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), [...Array(totalPages).keys()].map(el => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setPage(el + 1),\n            className: styles.item,\n            children: el + 1\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: nextPage,\n            className: styles.rightArrow,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SvgIcon, {\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: iconPath.rightArrow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(JobContainer, \"/BbG0sNjRVMgjOm69gpxPYWDujM=\", false, function () {\n  return [usePagination];\n});\n_c = JobContainer;\nconst mapStatetoProps = state => ({\n  list: selectJobsList(state),\n  tags: selectCurrnetTags(state)\n});\nconst mapDispatchToProps = dispatch => ({\n  onSetCurrentJob: data => {\n    dispatch(setCurrentJob(data));\n  },\n  onSetTag: tag => {\n    dispatch(setTag(tag));\n  }\n});\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobContainer);\nvar _c;\n$RefreshReg$(_c, \"JobContainer\");","map":{"version":3,"names":["SvgIcon","React","useEffect","useState","connect","additionalStyles","iconPath","AdditionalInfo","usePagination","selectCurrnetTags","selectJobsList","setCurrentJob","setTag","Utils","Job","styles","JobContainer","props","list","setList","tags","setTags","sortedList","sortJobs","firstContentIndex","lastContentIndex","nextPage","prevPage","page","setPage","totalPages","contentPerPage","count","length","background","title","data","heading","elements","style","onSetTag","slice","map","item","idx","onSetCurrentJob","pagination_container","pagination_data","leftArrow","Array","keys","el","rightArrow","mapStatetoProps","state","mapDispatchToProps","dispatch","tag"],"sources":["/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx"],"sourcesContent":["import { SvgIcon } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { additionalStyles } from \"../data/additionalStyles\";\nimport iconPath from \"../data/svgIcons\";\nimport AdditionalInfo from \"../JobDetailed/AdditionalInfo/AdditionalInfo\";\nimport { usePagination } from \"../redux/hooks\";\nimport {\n  JobType,\n  selectCurrnetTags,\n  selectJobsList,\n  setCurrentJob,\n  setTag,\n} from \"../redux/jobSlice\";\nimport { AppDispatch, RootState } from \"../redux/store\";\nimport { Utils } from \"../utils/utils\";\nimport Job from \"./Job\";\nimport styles from \"./Jobs.module.scss\";\n\ninterface JobContainerProps {\n  list: JobType[];\n  tags: string[];\n  onSetCurrentJob: (data: JobType) => void;\n  onSetTag: (tag: string) => void;\n}\n\nconst JobContainer: React.FC<JobContainerProps> = (\n  props: JobContainerProps\n) => {\n  const [list, setList] = useState<JobType[]>([]);\n  const [tags, setTags] = useState<string[]>([]);\n  const sortedList = Utils.sortJobs(list, tags);\n  const {\n    firstContentIndex,\n    lastContentIndex,\n    nextPage,\n    prevPage,\n    page,\n    setPage,\n    totalPages,\n  } = usePagination({\n    contentPerPage: 4,\n    count: tags ? sortedList.length : list.length,\n  });\n\n  useEffect(() => {\n    setList(props.list);\n    setTags(props.tags);\n  }, [props.list, props.tags]);\n\n  return (\n    <div className={styles.background}>\n      {!tags.length ? (\n        <></>\n      ) : (\n        <AdditionalInfo\n          {...{\n            title: \"Tags\",\n            data: [\n              {\n                heading: \"Selected tags\",\n                elements: tags,\n                style: additionalStyles.tags,\n              },\n            ],\n            onSetTag: props.onSetTag,\n          }}\n        />\n      )}\n      {sortedList.length\n        ? sortedList\n            .slice(firstContentIndex, lastContentIndex)\n            .map((item: JobType, idx) => (\n              <Job\n                data={{ ...item }}\n                onSetCurrentJob={props.onSetCurrentJob}\n                key={idx}\n              />\n            ))\n        : list.map((item: JobType, idx) => (\n            <Job\n              data={{ ...item }}\n              onSetCurrentJob={props.onSetCurrentJob}\n              key={idx}\n            />\n          ))}\n      <div className={styles.pagination_container}>\n        <div className={styles.pagination_data}>\n          <nav aria-label=\"Pagination\">\n            <a href=\"#\" onClick={prevPage} className={styles.leftArrow}>\n              <span className=\"sr-only\">Previous</span>\n              <SvgIcon>\n                <path d={iconPath.leftArrow} />\n              </SvgIcon>\n            </a>\n            {/* @ts-ignore */}\n            {[...Array(totalPages).keys()].map((el) => (\n              <a\n                href=\"#\"\n                onClick={() => setPage(el + 1)}\n                key={el}\n                className={styles.item}\n              >\n                {el + 1}\n              </a>\n            ))}\n            <a href=\"#\" onClick={nextPage} className={styles.rightArrow}>\n              <span className=\"sr-only\">Next</span>\n              <SvgIcon>\n                <path d={iconPath.rightArrow} />\n              </SvgIcon>\n            </a>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStatetoProps = (state: RootState) => ({\n  list: selectJobsList(state),\n  tags: selectCurrnetTags(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSetCurrentJob: (data: JobType) => {\n    dispatch(setCurrentJob(data));\n  },\n  onSetTag: (tag: string) => {\n    dispatch(setTag(tag));\n  },\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobContainer);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}