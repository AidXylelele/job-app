{"ast":null,"code":"var _jsxFileName = \"/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectJobsList, setCurrentJob } from \"../redux/jobSlice\";\nimport Job from \"./Jobs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobContainer = props => {\n  const {\n    list\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list.map((item, idx) => /*#__PURE__*/_jsxDEV(Job, {\n      data: item,\n      onSetCurrentJob: props.onSetCurrentJob\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = JobContainer;\nconst mapStatetoProps = state => ({\n  list: selectJobsList(state)\n});\nconst mapDispatchToProps = dispatch => ({\n  onSetCurrentJob: data => {\n    dispatch(setCurrentJob(data));\n  }\n});\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobContainer);\nvar _c;\n$RefreshReg$(_c, \"JobContainer\");","map":{"version":3,"names":["React","connect","selectJobsList","setCurrentJob","Job","JobContainer","props","list","map","item","idx","onSetCurrentJob","mapStatetoProps","state","mapDispatchToProps","dispatch","data"],"sources":["/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  JobType,\n  JobsState,\n  selectJobsList,\n  setCurrentJob,\n} from \"../redux/jobSlice\";\nimport { AppDispatch, RootState } from \"../redux/store\";\nimport Job from \"./Jobs\";\n\ntype JobContainerProps = {\n  list: JobType[];\n  onSetCurrentJob: (data: JobType) => void;\n};\n\nconst JobContainer: React.FC<JobContainerProps> = (\n  props: JobContainerProps\n) => {\n  const { list } = props;\n  return (\n    <div>\n      {list.map((item: JobType, idx) => (\n        <Job data={item} onSetCurrentJob={props.onSetCurrentJob} key={idx} />\n      ))}\n    </div>\n  );\n};\n\nconst mapStatetoProps = (state: RootState) => ({\n  list: selectJobsList(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSetCurrentJob: (data: JobType) => {\n    dispatch(setCurrentJob(data));\n  },\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobContainer);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAGEC,cAAc,EACdC,aAAa,QACR,mBAAmB;AAE1B,OAAOC,GAAG,MAAM,QAAQ;AAAC;AAOzB,MAAMC,YAAyC,GAC7CC,KAAwB,IACrB;EACH,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK;EACtB,oBACE;IAAA,UACGC,IAAI,CAACC,GAAG,CAAC,CAACC,IAAa,EAAEC,GAAG,kBAC3B,QAAC,GAAG;MAAC,IAAI,EAAED,IAAK;MAAC,eAAe,EAAEH,KAAK,CAACK;IAAgB,GAAMD,GAAG;MAAA;MAAA;MAAA;IAAA,QAClE;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAXIL,YAAyC;AAa/C,MAAMO,eAAe,GAAIC,KAAgB,KAAM;EAC7CN,IAAI,EAAEL,cAAc,CAACW,KAAK;AAC5B,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAIC,QAAqB,KAAM;EACrDJ,eAAe,EAAGK,IAAa,IAAK;IAClCD,QAAQ,CAACZ,aAAa,CAACa,IAAI,CAAC,CAAC;EAC/B;AACF,CAAC,CAAC;AAEF,eAAef,OAAO,CAACW,eAAe,EAAEE,kBAAkB,CAAC,CAACT,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}