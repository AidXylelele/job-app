{"ast":null,"code":"var _jsxFileName = \"/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectJobsList } from \"../redux/jobSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JobContainer = props => {\n  const {\n    list\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: list.forEach((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: item.pictures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = JobContainer;\nconst mapStatetoProps = state => ({\n  initialized: selectJobsList(state)\n});\nconst mapDispatchToProps = dispatch => ({});\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobContainer);\nvar _c;\n$RefreshReg$(_c, \"JobContainer\");","map":{"version":3,"names":["React","connect","selectJobsList","JobContainer","props","list","forEach","item","idx","pictures","mapStatetoProps","state","initialized","mapDispatchToProps","dispatch"],"sources":["/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { JobsState, JobType, selectJobsList } from \"../redux/jobSlice\";\nimport { AppDispatch, RootState } from \"../redux/store\";\n\nconst JobContainer: React.FC<JobsState> = (props: JobsState) => {\n  const { list } = props;\n  return (\n    <>\n      {list.forEach((item: JobType, idx: number) => (\n        <div className=\"container\">\n          <img className=\"image\" src={item.pictures}></img>\n        </div>\n      ))}\n    </>\n  );\n};\n\nconst mapStatetoProps = (state: RootState) => ({\n  initialized: selectJobsList(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobContainer);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAA6BC,cAAc,QAAQ,mBAAmB;AAAC;AAAA;AAGvE,MAAMC,YAAiC,GAAIC,KAAgB,IAAK;EAC9D,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK;EACtB,oBACE;IAAA,UACGC,IAAI,CAACC,OAAO,CAAC,CAACC,IAAa,EAAEC,GAAW,kBACvC;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QAAK,SAAS,EAAC,OAAO;QAAC,GAAG,EAAED,IAAI,CAACE;MAAS;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QAEpD;EAAC,iBACD;AAEP,CAAC;AAAC,KAXIN,YAAiC;AAavC,MAAMO,eAAe,GAAIC,KAAgB,KAAM;EAC7CC,WAAW,EAAEV,cAAc,CAACS,KAAK;AACnC,CAAC,CAAC;AAEF,MAAME,kBAAkB,GAAIC,QAAqB,KAAM,CAAC,CAAC,CAAC;AAE1D,eAAeb,OAAO,CAACS,eAAe,EAAEG,kBAAkB,CAAC,CAACV,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}