{"ast":null,"code":"var _jsxFileName = \"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleMap, useJsApiLoader } from \"@react-google-maps/api\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"400px\",\n  height: \"400px\"\n};\nconst Map = props => {\n  _s();\n  const {\n    center,\n    API_KEY\n  } = props;\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: API_KEY\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(() => {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 6,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Map, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","containerStyle","width","height","Map","props","center","API_KEY","isLoaded","id","googleMapsApiKey","map","setMap","useState","onLoad","useCallback","onUnmount","memo"],"sources":["/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx"],"sourcesContent":["import React from \"react\";\nimport { GoogleMap, useJsApiLoader } from \"@react-google-maps/api\";\nimport { Theme } from \"./Theme\";\nexport interface CenterType {\n  lat: number;\n  lng: number;\n}\n\ninterface options {\n  panControl: boolean;\n  zoomControl: boolean;\n  mapTypeControl: boolean;\n  scaleControl: boolean;\n  streetViewControl: boolean;\n  rotateControl: boolean;\n  clickableIcons: false;\n  fullscreen;\n}\n\ninterface MapProps {\n  center: CenterType;\n  API_KEY: string;\n}\n\nconst containerStyle = {\n  width: \"400px\",\n  height: \"400px\",\n};\n\nconst Map: React.FC<MapProps> = (props: MapProps) => {\n  const { center, API_KEY } = props;\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: API_KEY,\n  });\n\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback((map: any): void => {\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback((): void => {\n    setMap(null);\n  }, []);\n\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={6}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {/* Child components, such as markers, info windows, etc. */}\n      <></>\n    </GoogleMap>\n  ) : (\n    <></>\n  );\n};\n\nexport default React.memo(Map);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,cAAc,QAAQ,wBAAwB;AAAC;AAAA;AAuBnE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,GAAuB,GAAIC,KAAe,IAAK;EAAA;EACnD,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EACjC,MAAM;IAAEG;EAAS,CAAC,GAAGR,cAAc,CAAC;IAClCS,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAEH;EACpB,CAAC,CAAC;EAEF,MAAM,CAACI,GAAG,EAAEC,MAAM,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMC,MAAM,GAAGhB,KAAK,CAACiB,WAAW,CAAEJ,GAAQ,IAAW;IACnDC,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAGlB,KAAK,CAACiB,WAAW,CAAC,MAAY;IAC9CH,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOJ,QAAQ,gBACb,QAAC,SAAS;IACR,iBAAiB,EAAEP,cAAe;IAClC,MAAM,EAAEK,MAAO;IACf,IAAI,EAAE,CAAE;IACR,MAAM,EAAEQ,MAAO;IACf,SAAS,EAAEE,SAAU;IAAA,uBAGrB;EAAK;IAAA;IAAA;IAAA;EAAA,QACK,gBAEZ,qCACD;AACH,CAAC;AAAC,GA/BIZ,GAAuB;EAAA,QAENJ,cAAc;AAAA;AAAA,KAF/BI,GAAuB;AAiC7B,kCAAeN,KAAK,CAACmB,IAAI,CAACb,GAAG,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}