{"ast":null,"code":"import _toConsumableArray from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{SvgIcon}from\"@mui/material\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import{additionalStyles}from\"../data/additionalStyles\";import iconPath from\"../data/svgIcons\";import AdditionalInfo from\"../JobDetailed/AdditionalInfo/AdditionalInfo\";import{usePagination}from\"../redux/hooks\";import{selectCurrnetTags,selectJobsList,setCurrentJob,setTag}from\"../redux/jobSlice\";import{Utils}from\"../utils/utils\";import Job from\"./Job\";import styles from\"./Jobs.module.scss\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var JobContainer=function JobContainer(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tags=_useState4[0],setTags=_useState4[1];var sortedList=Utils.sortJobs(list,tags);var _usePagination=usePagination({contentPerPage:4,count:tags?sortedList.length:list.length}),firstContentIndex=_usePagination.firstContentIndex,lastContentIndex=_usePagination.lastContentIndex,nextPage=_usePagination.nextPage,prevPage=_usePagination.prevPage,page=_usePagination.page,setPage=_usePagination.setPage,totalPages=_usePagination.totalPages;useEffect(function(){setList(props.list);setTags(props.tags);},[props.list,props.tags]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.background,children:[!tags.length?/*#__PURE__*/_jsx(_Fragment,{}):/*#__PURE__*/_jsx(AdditionalInfo,{title:\"Tags\",data:[{heading:\"Selected tags\",elements:tags,style:additionalStyles.tags}],onSetTag:props.onSetTag}),sortedList.length?sortedList.slice(firstContentIndex,lastContentIndex).map(function(item,idx){return/*#__PURE__*/_jsx(Job,{data:_objectSpread({},item),onSetCurrentJob:props.onSetCurrentJob},idx);}):list.map(function(item,idx){return/*#__PURE__*/_jsx(Job,{data:_objectSpread({},item),onSetCurrentJob:props.onSetCurrentJob},idx);}),/*#__PURE__*/_jsx(\"div\",{className:styles.pagination_container,children:/*#__PURE__*/_jsx(\"div\",{className:styles.pagination_data,children:/*#__PURE__*/_jsxs(\"nav\",{\"aria-label\":\"Pagination\",children:[/*#__PURE__*/_jsxs(\"a\",{href:\"#\",onClick:prevPage,className:styles.leftArrow,children:[/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Previous\"}),/*#__PURE__*/_jsx(SvgIcon,{children:/*#__PURE__*/_jsx(\"path\",{d:iconPath.leftArrow})})]}),_toConsumableArray(Array(totalPages).keys()).map(function(el){return/*#__PURE__*/_jsx(\"a\",{href:\"#\",onClick:function onClick(){return setPage(el+1);},className:styles.item,children:el+1},el);}),/*#__PURE__*/_jsxs(\"a\",{href:\"#\",onClick:nextPage,className:styles.rightArrow,children:[/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Next\"}),/*#__PURE__*/_jsx(SvgIcon,{children:/*#__PURE__*/_jsx(\"path\",{d:iconPath.rightArrow})})]})]})})})]});};var mapStatetoProps=function mapStatetoProps(state){return{list:selectJobsList(state),tags:selectCurrnetTags(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSetCurrentJob:function onSetCurrentJob(data){dispatch(setCurrentJob(data));},onSetTag:function onSetTag(tag){dispatch(setTag(tag));}};};export default connect(mapStatetoProps,mapDispatchToProps)(JobContainer);","map":{"version":3,"names":["SvgIcon","React","useEffect","useState","connect","additionalStyles","iconPath","AdditionalInfo","usePagination","selectCurrnetTags","selectJobsList","setCurrentJob","setTag","Utils","Job","styles","JobContainer","props","list","setList","tags","setTags","sortedList","sortJobs","contentPerPage","count","length","firstContentIndex","lastContentIndex","nextPage","prevPage","page","setPage","totalPages","background","title","data","heading","elements","style","onSetTag","slice","map","item","idx","onSetCurrentJob","pagination_container","pagination_data","leftArrow","Array","keys","el","rightArrow","mapStatetoProps","state","mapDispatchToProps","dispatch","tag"],"sources":["/Users/o.g_vlad/vscode/job-app/src/Job/JobContainer.tsx"],"sourcesContent":["import { SvgIcon } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { additionalStyles } from \"../data/additionalStyles\";\nimport iconPath from \"../data/svgIcons\";\nimport AdditionalInfo from \"../JobDetailed/AdditionalInfo/AdditionalInfo\";\nimport { usePagination } from \"../redux/hooks\";\nimport {\n  JobType,\n  selectCurrnetTags,\n  selectJobsList,\n  setCurrentJob,\n  setTag,\n} from \"../redux/jobSlice\";\nimport { AppDispatch, RootState } from \"../redux/store\";\nimport { Utils } from \"../utils/utils\";\nimport Job from \"./Job\";\nimport styles from \"./Jobs.module.scss\";\n\ninterface JobContainerProps {\n  list: JobType[];\n  tags: string[];\n  onSetCurrentJob: (data: JobType) => void;\n  onSetTag: (tag: string) => void;\n}\n\nconst JobContainer: React.FC<JobContainerProps> = (\n  props: JobContainerProps\n) => {\n  const [list, setList] = useState<JobType[]>([]);\n  const [tags, setTags] = useState<string[]>([]);\n  const sortedList = Utils.sortJobs(list, tags);\n  const {\n    firstContentIndex,\n    lastContentIndex,\n    nextPage,\n    prevPage,\n    page,\n    setPage,\n    totalPages,\n  } = usePagination({\n    contentPerPage: 4,\n    count: tags ? sortedList.length : list.length,\n  });\n\n  useEffect(() => {\n    setList(props.list);\n    setTags(props.tags);\n  }, [props.list, props.tags]);\n\n  return (\n    <div className={styles.background}>\n      {!tags.length ? (\n        <></>\n      ) : (\n        <AdditionalInfo\n          {...{\n            title: \"Tags\",\n            data: [\n              {\n                heading: \"Selected tags\",\n                elements: tags,\n                style: additionalStyles.tags,\n              },\n            ],\n            onSetTag: props.onSetTag,\n          }}\n        />\n      )}\n      {sortedList.length\n        ? sortedList\n            .slice(firstContentIndex, lastContentIndex)\n            .map((item: JobType, idx) => (\n              <Job\n                data={{ ...item }}\n                onSetCurrentJob={props.onSetCurrentJob}\n                key={idx}\n              />\n            ))\n        : list.map((item: JobType, idx) => (\n            <Job\n              data={{ ...item }}\n              onSetCurrentJob={props.onSetCurrentJob}\n              key={idx}\n            />\n          ))}\n      <div className={styles.pagination_container}>\n        <div className={styles.pagination_data}>\n          <nav aria-label=\"Pagination\">\n            <a href=\"#\" onClick={prevPage} className={styles.leftArrow}>\n              <span className=\"sr-only\">Previous</span>\n              <SvgIcon>\n                <path d={iconPath.leftArrow} />\n              </SvgIcon>\n            </a>\n            {/* @ts-ignore */}\n            {[...Array(totalPages).keys()].map((el) => (\n              <a\n                href=\"#\"\n                onClick={() => setPage(el + 1)}\n                key={el}\n                className={styles.item}\n              >\n                {el + 1}\n              </a>\n            ))}\n            <a href=\"#\" onClick={nextPage} className={styles.rightArrow}>\n              <span className=\"sr-only\">Next</span>\n              <SvgIcon>\n                <path d={iconPath.rightArrow} />\n              </SvgIcon>\n            </a>\n          </nav>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStatetoProps = (state: RootState) => ({\n  list: selectJobsList(state),\n  tags: selectCurrnetTags(state),\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSetCurrentJob: (data: JobType) => {\n    dispatch(setCurrentJob(data));\n  },\n  onSetTag: (tag: string) => {\n    dispatch(setTag(tag));\n  },\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(JobContainer);\n"],"mappings":"mWAAA,OAASA,OAAO,KAAQ,eAAe,CACvC,MAAOC,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,OAAO,KAAQ,aAAa,CACrC,OAASC,gBAAgB,KAAQ,0BAA0B,CAC3D,MAAOC,SAAQ,KAAM,kBAAkB,CACvC,MAAOC,eAAc,KAAM,8CAA8C,CACzE,OAASC,aAAa,KAAQ,gBAAgB,CAC9C,OAEEC,iBAAiB,CACjBC,cAAc,CACdC,aAAa,CACbC,MAAM,KACD,mBAAmB,CAE1B,OAASC,KAAK,KAAQ,gBAAgB,CACtC,MAAOC,IAAG,KAAM,OAAO,CACvB,MAAOC,OAAM,KAAM,oBAAoB,CAAC,6IASxC,GAAMC,aAAyC,CAAG,QAA5CA,aAAyC,CAC7CC,KAAwB,CACrB,CACH,cAAwBd,QAAQ,CAAY,EAAE,CAAC,wCAAxCe,IAAI,eAAEC,OAAO,eACpB,eAAwBhB,QAAQ,CAAW,EAAE,CAAC,yCAAvCiB,IAAI,eAAEC,OAAO,eACpB,GAAMC,WAAU,CAAGT,KAAK,CAACU,QAAQ,CAACL,IAAI,CAAEE,IAAI,CAAC,CAC7C,mBAQIZ,aAAa,CAAC,CAChBgB,cAAc,CAAE,CAAC,CACjBC,KAAK,CAAEL,IAAI,CAAGE,UAAU,CAACI,MAAM,CAAGR,IAAI,CAACQ,MACzC,CAAC,CAAC,CAVAC,iBAAiB,gBAAjBA,iBAAiB,CACjBC,gBAAgB,gBAAhBA,gBAAgB,CAChBC,QAAQ,gBAARA,QAAQ,CACRC,QAAQ,gBAARA,QAAQ,CACRC,IAAI,gBAAJA,IAAI,CACJC,OAAO,gBAAPA,OAAO,CACPC,UAAU,gBAAVA,UAAU,CAMZ/B,SAAS,CAAC,UAAM,CACdiB,OAAO,CAACF,KAAK,CAACC,IAAI,CAAC,CACnBG,OAAO,CAACJ,KAAK,CAACG,IAAI,CAAC,CACrB,CAAC,CAAE,CAACH,KAAK,CAACC,IAAI,CAAED,KAAK,CAACG,IAAI,CAAC,CAAC,CAE5B,mBACE,aAAK,SAAS,CAAEL,MAAM,CAACmB,UAAW,WAC/B,CAACd,IAAI,CAACM,MAAM,cACX,kBAAK,cAEL,KAAC,cAAc,EAEXS,KAAK,CAAE,MAAM,CACbC,IAAI,CAAE,CACJ,CACEC,OAAO,CAAE,eAAe,CACxBC,QAAQ,CAAElB,IAAI,CACdmB,KAAK,CAAElC,gBAAgB,CAACe,IAC1B,CAAC,CACF,CACDoB,QAAQ,CAAEvB,KAAK,CAACuB,QAAQ,EAG7B,CACAlB,UAAU,CAACI,MAAM,CACdJ,UAAU,CACPmB,KAAK,CAACd,iBAAiB,CAAEC,gBAAgB,CAAC,CAC1Cc,GAAG,CAAC,SAACC,IAAa,CAAEC,GAAG,qBACtB,KAAC,GAAG,EACF,IAAI,kBAAOD,IAAI,CAAG,CAClB,eAAe,CAAE1B,KAAK,CAAC4B,eAAgB,EAClCD,GAAG,CACR,EACH,CAAC,CACJ1B,IAAI,CAACwB,GAAG,CAAC,SAACC,IAAa,CAAEC,GAAG,qBAC1B,KAAC,GAAG,EACF,IAAI,kBAAOD,IAAI,CAAG,CAClB,eAAe,CAAE1B,KAAK,CAAC4B,eAAgB,EAClCD,GAAG,CACR,EACH,CAAC,cACN,YAAK,SAAS,CAAE7B,MAAM,CAAC+B,oBAAqB,uBAC1C,YAAK,SAAS,CAAE/B,MAAM,CAACgC,eAAgB,uBACrC,aAAK,aAAW,YAAY,wBAC1B,WAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAEjB,QAAS,CAAC,SAAS,CAAEf,MAAM,CAACiC,SAAU,wBACzD,aAAM,SAAS,CAAC,SAAS,sBAAgB,cACzC,KAAC,OAAO,wBACN,aAAM,CAAC,CAAE1C,QAAQ,CAAC0C,SAAU,EAAG,EACvB,GACR,CAEH,mBAAIC,KAAK,CAAChB,UAAU,CAAC,CAACiB,IAAI,EAAE,EAAER,GAAG,CAAC,SAACS,EAAE,qBACpC,UACE,IAAI,CAAC,GAAG,CACR,OAAO,CAAE,yBAAMnB,QAAO,CAACmB,EAAE,CAAG,CAAC,CAAC,EAAC,CAE/B,SAAS,CAAEpC,MAAM,CAAC4B,IAAK,UAEtBQ,EAAE,CAAG,CAAC,EAHFA,EAAE,CAIL,EACL,CAAC,cACF,WAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAEtB,QAAS,CAAC,SAAS,CAAEd,MAAM,CAACqC,UAAW,wBAC1D,aAAM,SAAS,CAAC,SAAS,kBAAY,cACrC,KAAC,OAAO,wBACN,aAAM,CAAC,CAAE9C,QAAQ,CAAC8C,UAAW,EAAG,EACxB,GACR,GACA,EACF,EACF,GACF,CAEV,CAAC,CAED,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIC,KAAgB,QAAM,CAC7CpC,IAAI,CAAER,cAAc,CAAC4C,KAAK,CAAC,CAC3BlC,IAAI,CAAEX,iBAAiB,CAAC6C,KAAK,CAC/B,CAAC,EAAC,CAEF,GAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIC,QAAqB,QAAM,CACrDX,eAAe,CAAE,yBAACT,IAAa,CAAK,CAClCoB,QAAQ,CAAC7C,aAAa,CAACyB,IAAI,CAAC,CAAC,CAC/B,CAAC,CACDI,QAAQ,CAAE,kBAACiB,GAAW,CAAK,CACzBD,QAAQ,CAAC5C,MAAM,CAAC6C,GAAG,CAAC,CAAC,CACvB,CACF,CAAC,EAAC,CAEF,cAAerD,QAAO,CAACiD,eAAe,CAAEE,kBAAkB,CAAC,CAACvC,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}