{"ast":null,"code":"import { configureStore, applyMiddleware } from \"@reduxjs/toolkit\";\nimport { composeWithDevTools } from \"@reduxjs/toolkit/dist/devtoolsExtension\";\nimport setJobsListReducer from \"../features/jobSlice/jobSlice\";\nconst composedEnhancer = composeWithDevTools(\n// Add whatever middleware you actually want to use here\napplyMiddleware()\n// other store enhancers if any\n);\n\nexport const store = configureStore({\n  reducer: {\n    jobs: setJobsListReducer\n  }\n});","map":{"version":3,"names":["configureStore","applyMiddleware","composeWithDevTools","setJobsListReducer","composedEnhancer","store","reducer","jobs"],"sources":["/Users/o.g_vlad/vscode/job-app/src/app/store.ts"],"sourcesContent":["import {\n  configureStore,\n  applyMiddleware,\n  ThunkAction,\n  AnyAction,\n} from \"@reduxjs/toolkit\";\nimport { composeWithDevTools } from \"@reduxjs/toolkit/dist/devtoolsExtension\";\nimport setJobsListReducer from \"../features/jobSlice/jobSlice\";\n\nconst composedEnhancer = composeWithDevTools(\n  // Add whatever middleware you actually want to use here\n  applyMiddleware()\n  // other store enhancers if any\n);\n\nexport const store = configureStore({\n  reducer: {\n    jobs: setJobsListReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  AnyAction\n>;\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,eAAe,QAGV,kBAAkB;AACzB,SAASC,mBAAmB,QAAQ,yCAAyC;AAC7E,OAAOC,kBAAkB,MAAM,+BAA+B;AAE9D,MAAMC,gBAAgB,GAAGF,mBAAmB;AAC1C;AACAD,eAAe;AACf;AAAA,CACD;;AAED,OAAO,MAAMI,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPC,IAAI,EAAEJ;EACR;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}