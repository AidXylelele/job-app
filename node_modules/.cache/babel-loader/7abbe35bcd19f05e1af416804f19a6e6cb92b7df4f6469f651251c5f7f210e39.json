{"ast":null,"code":"export class Utils {}\nUtils.compareTags = (first, second) => {\n  for (const element of first) {\n    if (!second.includes(element)) return false;\n  }\n  return true;\n};\nUtils.sortJobs = (list, selectedTags) => {\n  const res = [];\n  for (const job of list) {\n    const {\n      benefits,\n      employment_type\n    } = job;\n    const jobTags = benefits.concat(employment_type);\n    if (Utils.compareTags(selectedTags, jobTags)) {\n      res.push(job);\n    }\n  }\n  return res;\n};\nUtils.parseDescription = date => {\n  const parsedData = [];\n  const parsedText = date.split(/\\r\\n|\\t|\\r|\\n/g).map(item => item.trimStart().trimEnd()).filter(item => item !== \"\");\n  for (let i = 0; i < parsedText.length; i++) {\n    const current = parsedText[i];\n    const next = parsedText[i + 1];\n    if (current.includes(\":\") && !next.includes(\":\")) {\n      parsedData.push([current, next]);\n      i = parsedText.indexOf(next);\n      continue;\n    }\n    parsedData.push([current]);\n  }\n  return parsedData;\n};","map":{"version":3,"names":["Utils","compareTags","first","second","element","includes","sortJobs","list","selectedTags","res","job","benefits","employment_type","jobTags","concat","push","parseDescription","date","parsedData","parsedText","split","map","item","trimStart","trimEnd","filter","i","length","current","next","indexOf"],"sources":["/Users/o.g_vlad/vscode/job-app/src/utils/utils.ts"],"sourcesContent":["import { JobType } from \"../redux/jobSlice\";\n\nexport class Utils {\n  static compareTags = (first: string[], second: string[]): boolean => {\n    for (const element of first) {\n      if (!second.includes(element)) return false;\n    }\n    return true;\n  };\n\n  static sortJobs = (list: JobType[], selectedTags: string[]): JobType[] => {\n    const res: JobType[] = [];\n    for (const job of list) {\n      const { benefits, employment_type } = job;\n      const jobTags = benefits.concat(employment_type);\n      if (Utils.compareTags(selectedTags, jobTags)) {\n        res.push(job);\n      }\n    }\n    return res;\n  };\n\n  static parseDescription = (date: string): Array<Array<string>> => {\n    const parsedData: Array<Array<string>> = [];\n    const parsedText = date\n      .split(/\\r\\n|\\t|\\r|\\n/g)\n      .map((item) => item.trimStart().trimEnd())\n      .filter((item) => item !== \"\");\n    for (let i = 0; i < parsedText.length; i++) {\n      const current = parsedText[i];\n      const next = parsedText[i + 1];\n      if (current.includes(\":\") && !next.includes(\":\")) {\n        parsedData.push([current, next]);\n        i = parsedText.indexOf(next);\n        continue;\n      }\n      parsedData.push([current]);\n    }\n    return parsedData;\n  };\n}\n"],"mappings":"AAEA,OAAO,MAAMA,KAAK,CAAC;AAANA,KAAK,CACTC,WAAW,GAAG,CAACC,KAAe,EAAEC,MAAgB,KAAc;EACnE,KAAK,MAAMC,OAAO,IAAIF,KAAK,EAAE;IAC3B,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACD,OAAO,CAAC,EAAE,OAAO,KAAK;EAC7C;EACA,OAAO,IAAI;AACb,CAAC;AANUJ,KAAK,CAQTM,QAAQ,GAAG,CAACC,IAAe,EAAEC,YAAsB,KAAgB;EACxE,MAAMC,GAAc,GAAG,EAAE;EACzB,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;IACtB,MAAM;MAAEI,QAAQ;MAAEC;IAAgB,CAAC,GAAGF,GAAG;IACzC,MAAMG,OAAO,GAAGF,QAAQ,CAACG,MAAM,CAACF,eAAe,CAAC;IAChD,IAAIZ,KAAK,CAACC,WAAW,CAACO,YAAY,EAAEK,OAAO,CAAC,EAAE;MAC5CJ,GAAG,CAACM,IAAI,CAACL,GAAG,CAAC;IACf;EACF;EACA,OAAOD,GAAG;AACZ,CAAC;AAlBUT,KAAK,CAoBTgB,gBAAgB,GAAIC,IAAY,IAA2B;EAChE,MAAMC,UAAgC,GAAG,EAAE;EAC3C,MAAMC,UAAU,GAAGF,IAAI,CACpBG,KAAK,CAAC,gBAAgB,CAAC,CACvBC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,EAAE,CAACC,OAAO,EAAE,CAAC,CACzCC,MAAM,CAAEH,IAAI,IAAKA,IAAI,KAAK,EAAE,CAAC;EAChC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,UAAU,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,MAAME,OAAO,GAAGT,UAAU,CAACO,CAAC,CAAC;IAC7B,MAAMG,IAAI,GAAGV,UAAU,CAACO,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAIE,OAAO,CAACvB,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACwB,IAAI,CAACxB,QAAQ,CAAC,GAAG,CAAC,EAAE;MAChDa,UAAU,CAACH,IAAI,CAAC,CAACa,OAAO,EAAEC,IAAI,CAAC,CAAC;MAChCH,CAAC,GAAGP,UAAU,CAACW,OAAO,CAACD,IAAI,CAAC;MAC5B;IACF;IACAX,UAAU,CAACH,IAAI,CAAC,CAACa,OAAO,CAAC,CAAC;EAC5B;EACA,OAAOV,UAAU;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}