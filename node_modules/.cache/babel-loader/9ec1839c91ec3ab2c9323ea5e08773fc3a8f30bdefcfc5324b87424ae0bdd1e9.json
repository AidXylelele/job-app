{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport getJobsRequest from \"../requestAPI/requestAPI\";\nconst initialState = {\n  list: [],\n  currentJob: {\n    id: null,\n    name: null,\n    email: null,\n    phone: null,\n    title: null,\n    salary: null,\n    address: null,\n    benefits: null,\n    location: null,\n    pictures: null,\n    createdAt: null,\n    updatedAt: null,\n    description: null,\n    employment_type: null\n  }\n};\nexport const jobsSlice = createSlice({\n  name: \"jobs\",\n  initialState,\n  reducers: {\n    setJobsList: (state, action) => {\n      state.list = action.payload;\n    },\n    setCurrentJob: (state, action) => {\n      state.currentJob = action.payload;\n    }\n  }\n});\nexport const {\n  setJobsList,\n  setCurrentJob\n} = jobsSlice.actions;\nexport const selectJobsList = state => state.jobs.list;\nexport const selectCurrentJob = state => state.jobs.currentJob;\nexport const thunkSetJobs = () => async dispatch => {\n  const asyncResp = await getJobsRequest();\n  dispatch(setJobsList(asyncResp));\n};\nexport default jobsSlice.reducer;","map":{"version":3,"names":["createSlice","getJobsRequest","initialState","list","currentJob","id","name","email","phone","title","salary","address","benefits","location","pictures","createdAt","updatedAt","description","employment_type","jobsSlice","reducers","setJobsList","state","action","payload","setCurrentJob","actions","selectJobsList","jobs","selectCurrentJob","thunkSetJobs","dispatch","asyncResp","reducer"],"sources":["/Users/o.g_vlad/vscode/job-app/src/redux/jobSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk, RootState } from \"./store\";\nimport getJobsRequest from \"../requestAPI/requestAPI\";\n\nexport type JobType = {\n  id: string | null;\n  name: string | null;\n  email: string | null;\n  phone: string | null;\n  title: string | null;\n  salary: string | null;\n  address: string | null;\n  benefits: Array<string> | null;\n  location: object | null;\n  pictures: Array<string> | null;\n  createdAt: string | null;\n  updatedAt: string | null;\n  description: string | null;\n  employment_type: Array<string> | null;\n};\n\nexport type JobsState = {\n  list: Array<JobType>;\n  currentJob: JobType;\n};\n\nconst initialState: JobsState = {\n  list: [],\n  currentJob: {\n    id: null,\n    name: null,\n    email: null,\n    phone: null,\n    title: null,\n    salary: null,\n    address: null,\n    benefits: null,\n    location: null,\n    pictures: null,\n    createdAt: null,\n    updatedAt: null,\n    description: null,\n    employment_type: null,\n  },\n};\n\nexport const jobsSlice = createSlice({\n  name: \"jobs\",\n  initialState,\n  reducers: {\n    setJobsList: (state, action: PayloadAction<Array<JobType>>) => {\n      state.list = action.payload;\n    },\n    setCurrentJob: (state, action: PayloadAction<JobType>) => {\n      state.currentJob = action.payload;\n    },\n  },\n});\n\nexport const { setJobsList, setCurrentJob } = jobsSlice.actions;\n\nexport const selectJobsList = (state: RootState) => state.jobs.list;\nexport const selectCurrentJob = (state: RootState) => state.jobs.currentJob;\n\nexport const thunkSetJobs = (): AppThunk => async (dispatch) => {\n  const asyncResp = await getJobsRequest();\n  dispatch(setJobsList(asyncResp));\n};\n\nexport default jobsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,OAAOC,cAAc,MAAM,0BAA0B;AAwBrD,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE;IACVC,EAAE,EAAE,IAAI;IACRC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACfC,SAAS,EAAE,IAAI;IACfC,WAAW,EAAE,IAAI;IACjBC,eAAe,EAAE;EACnB;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EACnCM,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZkB,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAqC,KAAK;MAC7DD,KAAK,CAACnB,IAAI,GAAGoB,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,aAAa,EAAE,CAACH,KAAK,EAAEC,MAA8B,KAAK;MACxDD,KAAK,CAAClB,UAAU,GAAGmB,MAAM,CAACC,OAAO;IACnC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,WAAW;EAAEI;AAAc,CAAC,GAAGN,SAAS,CAACO,OAAO;AAE/D,OAAO,MAAMC,cAAc,GAAIL,KAAgB,IAAKA,KAAK,CAACM,IAAI,CAACzB,IAAI;AACnE,OAAO,MAAM0B,gBAAgB,GAAIP,KAAgB,IAAKA,KAAK,CAACM,IAAI,CAACxB,UAAU;AAE3E,OAAO,MAAM0B,YAAY,GAAG,MAAgB,MAAOC,QAAQ,IAAK;EAC9D,MAAMC,SAAS,GAAG,MAAM/B,cAAc,EAAE;EACxC8B,QAAQ,CAACV,WAAW,CAACW,SAAS,CAAC,CAAC;AAClC,CAAC;AAED,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}