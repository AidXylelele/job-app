{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport getJobsRequest from '../requestAPI/requestAPI';\nconst initialState = {\n  list: [],\n  currentJob: null\n};\nexport const jobsSlice = createSlice({\n  name: 'jobs',\n  initialState,\n  reducers: {\n    setJobsList: (state, action) => {\n      state.list = action.payload;\n    },\n    setCurrentJob: (state, action) => {\n      state.currentJob = action.payload;\n    }\n  }\n});\nexport const {\n  setJobsList,\n  setCurrentJob\n} = jobsSlice.actions;\nexport const selectJobsList = state => state.jobs.list;\nexport const selectCurrentJob = state => state.jobs.currentJob;\nexport const thunkSetJobs = () => async dispatch => {\n  const asyncResp = await getJobsRequest();\n  dispatch(setJobsList(asyncResp));\n};\nexport default jobsSlice.reducer;","map":{"version":3,"names":["createSlice","getJobsRequest","initialState","list","currentJob","jobsSlice","name","reducers","setJobsList","state","action","payload","setCurrentJob","actions","selectJobsList","jobs","selectCurrentJob","thunkSetJobs","dispatch","asyncResp","reducer"],"sources":["/Users/o.g_vlad/vscode/job-app/src/redux/jobSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from './store';\nimport getJobsRequest from '../requestAPI/requestAPI';\n\nexport type Location = {\n  lat: number;\n  long: number;\n};\n\nexport type JobType = {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  title: string;\n  salary: string;\n  address: string;\n  benefits: Array<string>;\n  location: JobType;\n  pictures: Array<string>;\n  createdAt: string;\n  updatedAt: string;\n  description: string;\n  employment_type: Array<string>;\n};\n\nexport type JobsState = {\n  list: Array<JobType>;\n  currentJob: JobType | null;\n};\n\nconst initialState: JobsState = {\n  list: [],\n  currentJob: null,\n};\n\nexport const jobsSlice = createSlice({\n  name: 'jobs',\n  initialState,\n  reducers: {\n    setJobsList: (state, action: PayloadAction<Array<JobType>>) => {\n      state.list = action.payload;\n    },\n    setCurrentJob: (state, action: PayloadAction<JobType>) => {\n      state.currentJob = action.payload;\n    },\n  },\n});\n\nexport const { setJobsList, setCurrentJob } = jobsSlice.actions;\n\nexport const selectJobsList = (state: RootState) => state.jobs.list;\nexport const selectCurrentJob = (state: RootState) => state.jobs.currentJob;\n\nexport const thunkSetJobs = (): AppThunk => async (dispatch) => {\n  const asyncResp = await getJobsRequest();\n  dispatch(setJobsList(asyncResp));\n};\n\nexport default jobsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,OAAOC,cAAc,MAAM,0BAA0B;AA6BrD,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAqC,KAAK;MAC7DD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,aAAa,EAAE,CAACH,KAAK,EAAEC,MAA8B,KAAK;MACxDD,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO;IACnC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,WAAW;EAAEI;AAAc,CAAC,GAAGP,SAAS,CAACQ,OAAO;AAE/D,OAAO,MAAMC,cAAc,GAAIL,KAAgB,IAAKA,KAAK,CAACM,IAAI,CAACZ,IAAI;AACnE,OAAO,MAAMa,gBAAgB,GAAIP,KAAgB,IAAKA,KAAK,CAACM,IAAI,CAACX,UAAU;AAE3E,OAAO,MAAMa,YAAY,GAAG,MAAgB,MAAOC,QAAQ,IAAK;EAC9D,MAAMC,SAAS,GAAG,MAAMlB,cAAc,EAAE;EACxCiB,QAAQ,CAACV,WAAW,CAACW,SAAS,CAAC,CAAC;AAClC,CAAC;AAED,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}