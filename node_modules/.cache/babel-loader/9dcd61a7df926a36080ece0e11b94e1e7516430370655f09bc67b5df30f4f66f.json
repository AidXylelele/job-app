{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _createClass from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/Users/o.g_vlad/vscode/job-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";export var Utils=/*#__PURE__*/_createClass(function Utils(){_classCallCheck(this,Utils);});Utils.countDate=function(createdAt,updatedAt){var createdData=new Date(createdAt);var updatedData=new Date(updatedAt);var differInSecs=(updatedData.getTime()-createdData.getTime())/1000;var days=differInSecs/86400;var end=days>1?\"days\":\"day\";return\"\".concat(Math.floor(days),\" \").concat(end);};Utils.compareTags=function(first,second){var _iterator=_createForOfIteratorHelper(first),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var element=_step.value;if(!second.includes(element))return false;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return true;};Utils.sortJobs=function(list,selectedTags){var res=[];var _iterator2=_createForOfIteratorHelper(list),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var job=_step2.value;var benefits=job.benefits,employment_type=job.employment_type;var jobTags=benefits.concat(employment_type);if(Utils.compareTags(selectedTags,jobTags)){res.push(job);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return res;};Utils.parseDescription=function(date){var parsedData=[];var parsedText=date.split(/\\r\\n|\\t|\\r|\\n/g).map(function(item){return item.trimStart().trimEnd();}).filter(function(item){return item!==\"\";});for(var i=0;i<parsedText.length;i++){var current=parsedText[i];var next=parsedText[i+1];if(current.includes(\":\")&&!next.includes(\":\")){parsedData.push([current,next]);i=parsedText.indexOf(next);continue;}parsedData.push([current]);}return parsedData;};Utils.parseSalary=function(data){return data.replaceAll(\"k\",\" 000\");};Utils.createPhoneNumber=function(numbers){var result=\"+ xx(xx)-xx-xxxx\";for(var i=0;i<numbers.length;i++){result=result.replace(\"x\",numbers[i]);}return result;};","map":{"version":3,"names":["Utils","countDate","createdAt","updatedAt","createdData","Date","updatedData","differInSecs","getTime","days","end","Math","floor","compareTags","first","second","element","includes","sortJobs","list","selectedTags","res","job","benefits","employment_type","jobTags","concat","push","parseDescription","date","parsedData","parsedText","split","map","item","trimStart","trimEnd","filter","i","length","current","next","indexOf","parseSalary","data","replaceAll","createPhoneNumber","numbers","result","replace"],"sources":["/Users/o.g_vlad/vscode/job-app/src/utils/utils.ts"],"sourcesContent":["import { JobType } from \"../redux/jobSlice\";\n\nexport class Utils {\n  static countDate = (createdAt: string, updatedAt: string): string => {\n    const createdData: Date = new Date(createdAt);\n    const updatedData: Date = new Date(updatedAt);\n    const differInSecs: number =\n      (updatedData.getTime() - createdData.getTime()) / 1000;\n    const days: number = differInSecs / 86400;\n    const end: string = days > 1 ? \"days\" : \"day\";\n    return `${Math.floor(days)} ${end}`;\n  };\n\n  static compareTags = (first: string[], second: string[]): boolean => {\n    for (const element of first) {\n      if (!second.includes(element)) return false;\n    }\n    return true;\n  };\n\n  static sortJobs = (list: JobType[], selectedTags: string[]): JobType[] => {\n    const res: JobType[] = [];\n    for (const job of list) {\n      const { benefits, employment_type } = job;\n      const jobTags = benefits.concat(employment_type);\n      if (Utils.compareTags(selectedTags, jobTags)) {\n        res.push(job);\n      }\n    }\n    return res;\n  };\n\n  static parseDescription = (date: string): string[][] => {\n    const parsedData: string[][] = [];\n    const parsedText = date\n      .split(/\\r\\n|\\t|\\r|\\n/g)\n      .map((item) => item.trimStart().trimEnd())\n      .filter((item) => item !== \"\");\n    for (let i = 0; i < parsedText.length; i++) {\n      const current = parsedText[i];\n      const next = parsedText[i + 1];\n      if (current.includes(\":\") && !next.includes(\":\")) {\n        parsedData.push([current, next]);\n        i = parsedText.indexOf(next);\n        continue;\n      }\n      parsedData.push([current]);\n    }\n    return parsedData;\n  };\n\n  static parseSalary = (data: string): string => data.replaceAll(\"k\", \" 000\");\n\n  static createPhoneNumber = (numbers: string): string => {\n    let result = \"+ xx(xx)-xx-xxxx\";\n    for (let i = 0; i < numbers.length; i++) {\n      result = result.replace(\"x\", numbers[i]);\n    }\n    return result;\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}