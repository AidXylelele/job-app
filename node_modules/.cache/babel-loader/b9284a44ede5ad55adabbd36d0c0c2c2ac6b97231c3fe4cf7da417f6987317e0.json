{"ast":null,"code":"var _jsxFileName = \"/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleMap, MarkerF } from \"@react-google-maps/api\";\nimport { Theme } from \"./Theme\";\nimport styles from \"./Map.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultOptions = {\n  panControl: true,\n  zoomControl: false,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  clickableIcons: false,\n  fullscreenControl: false,\n  keyboardShortcuts: false,\n  scrollwheel: false,\n  styles: Theme\n};\nconst containerStyle = {\n  width: \"400px\",\n  height: \"400px\"\n};\nconst Map = props => {\n  _s();\n  const {\n    center\n  } = props;\n  console.log(center);\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(() => {\n    setMap(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 12,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      options: defaultOptions,\n      children: /*#__PURE__*/_jsxDEV(MarkerF, {\n        onLoad: onLoad,\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"cOX+qz8P8Qlgqf5uFzYTRAoc4/c=\");\n_c = Map;\nexport default _c2 = /*#__PURE__*/React.memo(Map);\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","MarkerF","Theme","styles","defaultOptions","panControl","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","clickableIcons","fullscreenControl","keyboardShortcuts","scrollwheel","containerStyle","width","height","Map","props","center","console","log","map","setMap","useState","onLoad","useCallback","onUnmount","container","memo"],"sources":["/Users/o.g_vlad/vscode/job-app/src/JobDetailed/Map/Map.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  MarkerF,\n} from \"@react-google-maps/api\";\n\nimport { Theme } from \"./Theme\";\nimport styles from \"./Map.module.scss\";\nimport { LocationType } from \"../../redux/jobSlice\";\n\ninterface MapOptions {\n  panControl: boolean;\n  zoomControl: boolean;\n  mapTypeControl: boolean;\n  scaleControl: boolean;\n  streetViewControl: boolean;\n  rotateControl: boolean;\n  clickableIcons: boolean;\n  fullscreenControl: boolean;\n  keyboardShortcuts: boolean;\n  scrollwheel: boolean;\n  styles: any;\n}\n\nconst defaultOptions: MapOptions = {\n  panControl: true,\n  zoomControl: false,\n  mapTypeControl: false,\n  scaleControl: false,\n  streetViewControl: false,\n  rotateControl: false,\n  clickableIcons: false,\n  fullscreenControl: false,\n  keyboardShortcuts: false,\n  scrollwheel: false,\n  styles: Theme,\n};\n\ninterface MapProps {\n  center: LocationType;\n  API_KEY: string;\n}\n\nconst containerStyle = {\n  width: \"400px\",\n  height: \"400px\",\n};\n\nconst Map: React.FC<MapProps> = (props: MapProps) => {\n  const { center } = props;\n  console.log(center);\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback((map: any): void => {\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback((): void => {\n    setMap(null);\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={12}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n        options={defaultOptions}\n      >\n        <MarkerF onLoad={onLoad} position={center} />\n      </GoogleMap>\n    </div>\n  );\n};\n\nexport default React.memo(Map);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EAGTC,OAAO,QACF,wBAAwB;AAE/B,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAiBvC,MAAMC,cAA0B,GAAG;EACjCC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE,KAAK;EAClBC,cAAc,EAAE,KAAK;EACrBC,YAAY,EAAE,KAAK;EACnBC,iBAAiB,EAAE,KAAK;EACxBC,aAAa,EAAE,KAAK;EACpBC,cAAc,EAAE,KAAK;EACrBC,iBAAiB,EAAE,KAAK;EACxBC,iBAAiB,EAAE,KAAK;EACxBC,WAAW,EAAE,KAAK;EAClBX,MAAM,EAAED;AACV,CAAC;AAOD,MAAMa,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,GAAuB,GAAIC,KAAe,IAAK;EAAA;EACnD,MAAM;IAAEC;EAAO,CAAC,GAAGD,KAAK;EACxBE,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAM,CAACG,GAAG,EAAEC,MAAM,CAAC,GAAGzB,KAAK,CAAC0B,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMC,MAAM,GAAG3B,KAAK,CAAC4B,WAAW,CAAEJ,GAAQ,IAAW;IACnDC,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAG7B,KAAK,CAAC4B,WAAW,CAAC,MAAY;IAC9CH,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAErB,MAAM,CAAC0B,SAAU;IAAA,uBAC/B,QAAC,SAAS;MACR,iBAAiB,EAAEd,cAAe;MAClC,MAAM,EAAEK,MAAO;MACf,IAAI,EAAE,EAAG;MACT,MAAM,EAAEM,MAAO;MACf,SAAS,EAAEE,SAAU;MACrB,OAAO,EAAExB,cAAe;MAAA,uBAExB,QAAC,OAAO;QAAC,MAAM,EAAEsB,MAAO;QAAC,QAAQ,EAAEN;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACnC;IAAA;IAAA;IAAA;EAAA,QACR;AAEV,CAAC;AAAC,GA3BIF,GAAuB;AAAA,KAAvBA,GAAuB;AA6B7B,kCAAenB,KAAK,CAAC+B,IAAI,CAACZ,GAAG,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}